// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.3
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.Parsers.FunctionCallTypeArguments
{
    public partial record ConstantResultTypeArgument : CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase, CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public CrossCutting.Common.Results.Result<System.Type> Value
        {
            get;
        }

        public ConstantResultTypeArgument(CrossCutting.Common.Results.Result<System.Type> value) : base()
        {
            this.Value = value;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.ConstantResultTypeArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.ConstantResultTypeArgumentBuilder(this);
        }

        CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record ConstantTypeArgument : CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase, CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Type Value
        {
            get;
        }

        public ConstantTypeArgument(System.Type value) : base()
        {
            this.Value = value;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.ConstantTypeArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.ConstantTypeArgumentBuilder(this);
        }

        CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record DelegateResultTypeArgument : CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase, CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Func<CrossCutting.Common.Results.Result<System.Type>> Delegate
        {
            get;
        }

        public System.Func<CrossCutting.Common.Results.Result<System.Type>>? ValidationDelegate
        {
            get;
        }

        public DelegateResultTypeArgument(System.Func<CrossCutting.Common.Results.Result<System.Type>> @delegate, System.Func<CrossCutting.Common.Results.Result<System.Type>>? validationDelegate) : base()
        {
            this.Delegate = @delegate;
            this.ValidationDelegate = validationDelegate;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.DelegateResultTypeArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.DelegateResultTypeArgumentBuilder(this);
        }

        CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record DelegateTypeArgument : CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase, CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Func<System.Type> Delegate
        {
            get;
        }

        public System.Func<System.Type>? ValidationDelegate
        {
            get;
        }

        public DelegateTypeArgument(System.Func<System.Type> @delegate, System.Func<System.Type>? validationDelegate) : base()
        {
            this.Delegate = @delegate;
            this.ValidationDelegate = validationDelegate;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.DelegateTypeArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.DelegateTypeArgumentBuilder(this);
        }

        CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record ExpressionTypeArgument : CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase, CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public string Expression
        {
            get;
        }

        public ExpressionTypeArgument(string expression) : base()
        {
            this.Expression = expression;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.ExpressionTypeArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.ExpressionTypeArgumentBuilder(this);
        }

        CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record FunctionTypeArgument : CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase, CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        public CrossCutting.Utilities.Parsers.FunctionCall Function
        {
            get;
        }

        public FunctionTypeArgument(CrossCutting.Utilities.Parsers.FunctionCall function) : base()
        {
            this.Function = function;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.FunctionTypeArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.Parsers.Builders.FunctionCallTypeArguments.FunctionTypeArgumentBuilder(this);
        }

        CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
}
#nullable disable
