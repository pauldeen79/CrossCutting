// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.Parsers.FunctionDescriptorArguments
{
    public partial record FunctionDescriptorArgument : CrossCutting.Utilities.Parsers.FunctionDescriptorArgumentBase, CrossCutting.Utilities.Parsers.Abstractions.IFunctionDescriptorArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public string Name
        {
            get;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        public string Description
        {
            get;
        }

        public bool IsRequired
        {
            get;
        }

        public FunctionDescriptorArgument(string name, string description, bool isRequired) : base(name, description, isRequired)
        {
            this.Name = name;
            this.Description = description;
            this.IsRequired = isRequired;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.Parsers.Builders.FunctionDescriptorArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.Parsers.Builders.FunctionDescriptorArguments.FunctionDescriptorArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.Parsers.Builders.FunctionDescriptorArguments.FunctionDescriptorArgumentBuilder(this);
        }
    }
    public partial record LiteralFunctionDescriptorArgument : CrossCutting.Utilities.Parsers.FunctionDescriptorArgumentBase, CrossCutting.Utilities.Parsers.Abstractions.IFunctionDescriptorArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Type Type
        {
            get;
        }

        public LiteralFunctionDescriptorArgument(System.Type type, string name, string description, bool isRequired) : base(name, description, isRequired)
        {
            this.Type = type;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.Parsers.Builders.FunctionDescriptorArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.Parsers.Builders.FunctionDescriptorArguments.LiteralFunctionDescriptorArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.Parsers.Builders.FunctionDescriptorArguments.LiteralFunctionDescriptorArgumentBuilder(this);
        }
    }
}
#nullable disable
