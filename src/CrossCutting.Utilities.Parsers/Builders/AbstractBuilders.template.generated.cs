// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.8
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.Parsers.Builders
{
    public abstract partial class FunctionCallArgumentBaseBuilder<TBuilder, TEntity> : FunctionCallArgumentBaseBuilder, CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallArgumentBuilder
        where TEntity : CrossCutting.Utilities.Parsers.FunctionCallArgumentBase
        where TBuilder : FunctionCallArgumentBaseBuilder<TBuilder, TEntity>
    {
        protected FunctionCallArgumentBaseBuilder(CrossCutting.Utilities.Parsers.FunctionCallArgumentBase source) : base(source)
        {
        }

        protected FunctionCallArgumentBaseBuilder() : base()
        {
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArgumentBase Build()
        {
            return BuildTyped();
        }

        public abstract TEntity BuildTyped();

        CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallArgument CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallArgumentBuilder.Build()
        {
            return BuildTyped();
        }

        public static implicit operator CrossCutting.Utilities.Parsers.FunctionCallArgumentBase(FunctionCallArgumentBaseBuilder<TBuilder, TEntity> builder)
        {
            return builder.BuildTyped();
        }
    }
    public abstract partial class FunctionCallTypeArgumentBaseBuilder<TBuilder, TEntity> : FunctionCallTypeArgumentBaseBuilder, CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder
        where TEntity : CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase
        where TBuilder : FunctionCallTypeArgumentBaseBuilder<TBuilder, TEntity>
    {
        protected FunctionCallTypeArgumentBaseBuilder(CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase source) : base(source)
        {
        }

        protected FunctionCallTypeArgumentBaseBuilder() : base()
        {
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase Build()
        {
            return BuildTyped();
        }

        public abstract TEntity BuildTyped();

        CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder.Build()
        {
            return BuildTyped();
        }

        public static implicit operator CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase(FunctionCallTypeArgumentBaseBuilder<TBuilder, TEntity> builder)
        {
            return builder.BuildTyped();
        }
    }
}
#nullable disable
