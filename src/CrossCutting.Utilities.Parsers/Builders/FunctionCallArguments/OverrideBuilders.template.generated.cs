// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments
{
    public partial class ConstantArgumentBuilder : FunctionCallArgumentBuilder<ConstantArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantArgument>
    {
        private string _value;

        public string Value
        {
            get
            {
                return _value;
            }
            set
            {
                bool hasChanged = !System.Collections.Generic.EqualityComparer<System.String>.Default.Equals(_value!, value!);
                _value = value ?? throw new System.ArgumentNullException(nameof(value));
                if (hasChanged) HandlePropertyChanged(nameof(Value));
            }
        }

        public ConstantArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _value = source.Value;
        }

        public ConstantArgumentBuilder() : base()
        {
            _value = string.Empty;
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantArgument(Value);
        }

        partial void SetDefaultValues();

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments.ConstantArgumentBuilder WithValue(string value)
        {
            if (value is null) throw new System.ArgumentNullException(nameof(value));
            Value = value;
            return this;
        }
    }
    public partial class ConstantResultArgumentBuilder : FunctionCallArgumentBuilder<ConstantResultArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantResultArgument>
    {
        private CrossCutting.Common.Results.Result<object?> _result;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public CrossCutting.Common.Results.Result<object?> Result
        {
            get
            {
                return _result;
            }
            set
            {
                bool hasChanged = !System.Collections.Generic.EqualityComparer<CrossCutting.Common.Results.Result<System.Object?>>.Default.Equals(_result!, value!);
                _result = value ?? throw new System.ArgumentNullException(nameof(value));
                if (hasChanged) HandlePropertyChanged(nameof(Result));
            }
        }

        public ConstantResultArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantResultArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _result = source.Result;
        }

        public ConstantResultArgumentBuilder() : base()
        {
            _result = default(CrossCutting.Common.Results.Result<System.Object?>)!;
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantResultArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantResultArgument(Result);
        }

        partial void SetDefaultValues();

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments.ConstantResultArgumentBuilder WithResult(CrossCutting.Common.Results.Result<object?> result)
        {
            if (result is null) throw new System.ArgumentNullException(nameof(result));
            Result = result;
            return this;
        }
    }
    public partial class DelegateArgumentBuilder : FunctionCallArgumentBuilder<DelegateArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.DelegateArgument>
    {
        private System.Func<object?> _delegate;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Func<object?> Delegate
        {
            get
            {
                return _delegate;
            }
            set
            {
                bool hasChanged = !System.Collections.Generic.EqualityComparer<System.Func<System.Object?>>.Default.Equals(_delegate!, value!);
                _delegate = value ?? throw new System.ArgumentNullException(nameof(value));
                if (hasChanged) HandlePropertyChanged(nameof(Delegate));
            }
        }

        public DelegateArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.DelegateArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _delegate = source.Delegate;
        }

        public DelegateArgumentBuilder() : base()
        {
            _delegate = default(System.Func<System.Object?>)!;
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.DelegateArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.DelegateArgument(Delegate);
        }

        partial void SetDefaultValues();

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments.DelegateArgumentBuilder WithDelegate(System.Func<object?> @delegate)
        {
            if (@delegate is null) throw new System.ArgumentNullException(nameof(@delegate));
            Delegate = @delegate;
            return this;
        }
    }
    public partial class DelegateResultArgumentBuilder : FunctionCallArgumentBuilder<DelegateResultArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.DelegateResultArgument>
    {
        private System.Func<CrossCutting.Common.Results.Result<object?>> _delegate;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Func<CrossCutting.Common.Results.Result<object?>> Delegate
        {
            get
            {
                return _delegate;
            }
            set
            {
                bool hasChanged = !System.Collections.Generic.EqualityComparer<System.Func<CrossCutting.Common.Results.Result<System.Object?>>>.Default.Equals(_delegate!, value!);
                _delegate = value ?? throw new System.ArgumentNullException(nameof(value));
                if (hasChanged) HandlePropertyChanged(nameof(Delegate));
            }
        }

        public DelegateResultArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.DelegateResultArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _delegate = source.Delegate;
        }

        public DelegateResultArgumentBuilder() : base()
        {
            _delegate = default(System.Func<CrossCutting.Common.Results.Result<System.Object?>>)!;
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.DelegateResultArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.DelegateResultArgument(Delegate);
        }

        partial void SetDefaultValues();

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments.DelegateResultArgumentBuilder WithDelegate(System.Func<CrossCutting.Common.Results.Result<object?>> @delegate)
        {
            if (@delegate is null) throw new System.ArgumentNullException(nameof(@delegate));
            Delegate = @delegate;
            return this;
        }
    }
    public partial class EmptyArgumentBuilder : FunctionCallArgumentBuilder<EmptyArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.EmptyArgument>
    {
        public EmptyArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.EmptyArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
        }

        public EmptyArgumentBuilder() : base()
        {
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.EmptyArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.EmptyArgument();
        }

        partial void SetDefaultValues();
    }
    public partial class FunctionArgumentBuilder : FunctionCallArgumentBuilder<FunctionArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.FunctionArgument>
    {
        private CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder _function;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        public CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder Function
        {
            get
            {
                return _function;
            }
            set
            {
                bool hasChanged = !System.Collections.Generic.EqualityComparer<CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder>.Default.Equals(_function!, value!);
                _function = value ?? throw new System.ArgumentNullException(nameof(value));
                if (hasChanged) HandlePropertyChanged(nameof(Function));
            }
        }

        public FunctionArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.FunctionArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _function = source.Function.ToBuilder();
        }

        public FunctionArgumentBuilder() : base()
        {
            _function = new CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder()!;
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.FunctionArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.FunctionArgument(Function.Build());
        }

        partial void SetDefaultValues();

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments.FunctionArgumentBuilder WithFunction(CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder function)
        {
            if (function is null) throw new System.ArgumentNullException(nameof(function));
            Function = function;
            return this;
        }
    }
}
#nullable disable
