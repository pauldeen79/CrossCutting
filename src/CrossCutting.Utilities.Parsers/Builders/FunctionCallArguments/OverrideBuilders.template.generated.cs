// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments
{
    public partial class ConstantArgumentBuilder : FunctionCallArgumentBuilder<ConstantArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantArgument>
    {
        private string _value;

        public string Value
        {
            get
            {
                return _value;
            }
            set
            {
                bool hasChanged = !System.Collections.Generic.EqualityComparer<System.String>.Default.Equals(_value!, value!);
                _value = value ?? throw new System.ArgumentNullException(nameof(value));
                if (hasChanged) HandlePropertyChanged(nameof(Value));
            }
        }

        public ConstantArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _value = source.Value;
        }

        public ConstantArgumentBuilder() : base()
        {
            _value = string.Empty;
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.ConstantArgument(Value);
        }

        partial void SetDefaultValues();

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments.ConstantArgumentBuilder WithValue(string value)
        {
            if (value is null) throw new System.ArgumentNullException(nameof(value));
            Value = value;
            return this;
        }
    }
    public partial class DynamicArgumentBuilder : FunctionCallArgumentBuilder<DynamicArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.DynamicArgument>
    {
        private CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder _function;

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        public CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder Function
        {
            get
            {
                return _function;
            }
            set
            {
                bool hasChanged = !System.Collections.Generic.EqualityComparer<CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder>.Default.Equals(_function!, value!);
                _function = value ?? throw new System.ArgumentNullException(nameof(value));
                if (hasChanged) HandlePropertyChanged(nameof(Function));
            }
        }

        public DynamicArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.DynamicArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _function = source.Function.ToBuilder();
        }

        public DynamicArgumentBuilder() : base()
        {
            _function = new CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder()!;
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.DynamicArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.DynamicArgument(Function.Build());
        }

        partial void SetDefaultValues();

        public CrossCutting.Utilities.Parsers.Builders.FunctionCallArguments.DynamicArgumentBuilder WithFunction(CrossCutting.Utilities.Parsers.Builders.FunctionCallBuilder function)
        {
            if (function is null) throw new System.ArgumentNullException(nameof(function));
            Function = function;
            return this;
        }
    }
    public partial class EmptyArgumentBuilder : FunctionCallArgumentBuilder<EmptyArgumentBuilder, CrossCutting.Utilities.Parsers.FunctionCallArguments.EmptyArgument>
    {
        public EmptyArgumentBuilder(CrossCutting.Utilities.Parsers.FunctionCallArguments.EmptyArgument source) : base(source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
        }

        public EmptyArgumentBuilder() : base()
        {
            SetDefaultValues();
        }

        public override CrossCutting.Utilities.Parsers.FunctionCallArguments.EmptyArgument BuildTyped()
        {
            return new CrossCutting.Utilities.Parsers.FunctionCallArguments.EmptyArgument();
        }

        partial void SetDefaultValues();
    }
}
#nullable disable
