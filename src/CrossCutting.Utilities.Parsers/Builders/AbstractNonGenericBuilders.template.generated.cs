// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.9
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.Parsers.Builders
{
    public abstract partial class FunctionCallArgumentBaseBuilder : CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallArgumentBuilder, System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected FunctionCallArgumentBaseBuilder(CrossCutting.Utilities.Parsers.FunctionCallArgumentBase source)
        {
        }

        protected FunctionCallArgumentBaseBuilder()
        {
            SetDefaultValues();
        }

        public abstract CrossCutting.Utilities.Parsers.FunctionCallArgumentBase Build();

        CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallArgument CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallArgumentBuilder.Build()
        {
            return Build();
        }

        partial void SetDefaultValues();

        public static implicit operator CrossCutting.Utilities.Parsers.FunctionCallArgumentBase(FunctionCallArgumentBaseBuilder builder)
        {
            return builder.Build();
        }

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
    public abstract partial class FunctionCallTypeArgumentBaseBuilder : CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder, System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected FunctionCallTypeArgumentBaseBuilder(CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase source)
        {
        }

        protected FunctionCallTypeArgumentBaseBuilder()
        {
            SetDefaultValues();
        }

        public abstract CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase Build();

        CrossCutting.Utilities.Parsers.Abstractions.IFunctionCallTypeArgument CrossCutting.Utilities.Parsers.Builders.Abstractions.IFunctionCallTypeArgumentBuilder.Build()
        {
            return Build();
        }

        partial void SetDefaultValues();

        public static implicit operator CrossCutting.Utilities.Parsers.FunctionCallTypeArgumentBase(FunctionCallTypeArgumentBaseBuilder builder)
        {
            return builder.Build();
        }

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
}
#nullable disable
