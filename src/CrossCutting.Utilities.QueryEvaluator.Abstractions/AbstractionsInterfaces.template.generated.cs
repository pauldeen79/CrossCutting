// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.6
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.QueryEvaluator.Abstractions
{
    public partial interface ICondition
    {
        System.Nullable<CrossCutting.Utilities.QueryEvaluator.Abstractions.Domains.Combination> Combination
        {
            get;
        }

        bool StartGroup
        {
            get;
        }

        bool EndGroup
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IConditionBuilder ToBuilder();
    }
    public partial interface IDoubleExpressionContainer : CrossCutting.Utilities.QueryEvaluator.Abstractions.ISingleExpressionContainer
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        CrossCutting.Utilities.QueryEvaluator.Abstractions.IExpression SecondExpression
        {
            get;
        }

        new CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IDoubleExpressionContainerBuilder ToBuilder();
    }
    public partial interface IExpression
    {
        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IExpressionBuilder ToBuilder();
    }
    public partial interface IQuery
    {
        System.Nullable<int> Limit
        {
            get;
        }

        System.Nullable<int> Offset
        {
            get;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        [CrossCutting.Utilities.QueryEvaluator.Abstractions.Validation.ValidGroupsAttribute]
        System.Collections.Generic.IReadOnlyCollection<CrossCutting.Utilities.QueryEvaluator.Abstractions.ICondition> Conditions
        {
            get;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.IReadOnlyCollection<CrossCutting.Utilities.QueryEvaluator.Abstractions.ISortOrder> SortOrders
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IQueryBuilder ToBuilder();
    }
    public partial interface ISingleExpressionContainer
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        CrossCutting.Utilities.QueryEvaluator.Abstractions.IExpression FirstExpression
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.ISingleExpressionContainerBuilder ToBuilder();
    }
    public partial interface ISortOrder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        CrossCutting.Utilities.QueryEvaluator.Abstractions.IExpression Expression
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.Domains.SortOrderDirection Order
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.ISortOrderBuilder ToBuilder();
    }
    public partial interface IStringComparisonContainer
    {
        System.StringComparison StringComparison
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IStringComparisonContainerBuilder ToBuilder();
    }
}
#nullable disable
