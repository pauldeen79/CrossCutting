// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.8
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders
{
    public partial interface IConditionBuilder
    {
        System.Nullable<CrossCutting.Utilities.QueryEvaluator.Abstractions.Domains.Combination> Combination
        {
            get;
            set;
        }

        bool StartGroup
        {
            get;
            set;
        }

        bool EndGroup
        {
            get;
            set;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.ICondition Build();
    }
    public partial interface IContextualQueryBuilder : CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IQueryBuilder
    {
        object? Context
        {
            get;
            set;
        }

        new CrossCutting.Utilities.QueryEvaluator.Abstractions.IContextualQuery Build();
    }
    public partial interface IDataObjectNameQueryBuilder : CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IQueryBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        string DataObjectName
        {
            get;
            set;
        }

        new CrossCutting.Utilities.QueryEvaluator.Abstractions.IDataObjectNameQuery Build();
    }
    public partial interface IDoubleExpressionContainerBuilder : CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.ISingleExpressionContainerBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IExpressionBuilder CompareExpression
        {
            get;
            set;
        }

        new CrossCutting.Utilities.QueryEvaluator.Abstractions.IDoubleExpressionContainer Build();
    }
    public partial interface IExpressionBuilder
    {
        CrossCutting.Utilities.QueryEvaluator.Abstractions.IExpression Build();
    }
    public partial interface IFieldSelectionQueryBuilder : CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IQueryBuilder
    {
        bool Distinct
        {
            get;
            set;
        }

        bool GetAllFields
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        System.Collections.Generic.List<string> FieldNames
        {
            get;
            set;
        }

        new CrossCutting.Utilities.QueryEvaluator.Abstractions.IFieldSelectionQuery Build();
    }
    public partial interface IInConditionBuilder : CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IConditionBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IExpressionBuilder SourceExpression
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.List<CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IExpressionBuilder> CompareExpressions
        {
            get;
            set;
        }

        new CrossCutting.Utilities.QueryEvaluator.Abstractions.IInCondition Build();
    }
    public partial interface IParameterizedQueryBuilder : CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IQueryBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.List<CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IQueryParameterBuilder> Parameters
        {
            get;
            set;
        }

        new CrossCutting.Utilities.QueryEvaluator.Abstractions.IParameterizedQuery Build();
    }
    public partial interface IQueryBuilder
    {
        System.Nullable<int> Limit
        {
            get;
            set;
        }

        System.Nullable<int> Offset
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        [CrossCutting.Utilities.QueryEvaluator.Abstractions.Validation.ValidGroupsAttribute]
        System.Collections.Generic.List<CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IConditionBuilder> Conditions
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.List<CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.ISortOrderBuilder> SortOrders
        {
            get;
            set;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.IQuery Build();
    }
    public partial interface IQueryParameterBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        string Name
        {
            get;
            set;
        }

        object? Value
        {
            get;
            set;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.IQueryParameter Build();
    }
    public partial interface IQueryParameterValueBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        string Name
        {
            get;
            set;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.IQueryParameterValue Build();
    }
    public partial interface ISingleExpressionContainerBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IExpressionBuilder SourceExpression
        {
            get;
            set;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.ISingleExpressionContainer Build();
    }
    public partial interface ISortOrderBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.IExpressionBuilder Expression
        {
            get;
            set;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.Domains.SortOrderDirection Order
        {
            get;
            set;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.ISortOrder Build();
    }
    public partial interface IStringComparisonContainerBuilder
    {
        System.StringComparison StringComparison
        {
            get;
            set;
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.IStringComparisonContainer Build();
    }
}
#nullable disable
