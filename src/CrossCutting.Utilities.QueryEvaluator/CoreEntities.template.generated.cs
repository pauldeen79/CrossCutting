// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.9
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.QueryEvaluator.Core
{
    public partial record SortOrder : CrossCutting.Utilities.QueryEvaluator.Abstractions.ISortOrder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        public CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IExpression Expression
        {
            get;
        }

        public CrossCutting.Utilities.QueryEvaluator.Abstractions.Domains.SortOrderDirection Order
        {
            get;
        }

        public SortOrder(CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IExpression expression, CrossCutting.Utilities.QueryEvaluator.Abstractions.Domains.SortOrderDirection order)
        {
            this.Expression = expression;
            this.Order = order;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public static implicit operator CrossCutting.Utilities.QueryEvaluator.Core.Builders.SortOrderBuilder(CrossCutting.Utilities.QueryEvaluator.Core.SortOrder entity)
        {
            return entity.ToBuilder();
        }

        public CrossCutting.Utilities.QueryEvaluator.Core.Builders.SortOrderBuilder ToBuilder()
        {
            return new CrossCutting.Utilities.QueryEvaluator.Core.Builders.SortOrderBuilder(this);
        }

        CrossCutting.Utilities.QueryEvaluator.Abstractions.Builders.ISortOrderBuilder CrossCutting.Utilities.QueryEvaluator.Abstractions.ISortOrder.ToBuilder()
        {
            return ToBuilder();
        }
    }
}
#nullable disable
