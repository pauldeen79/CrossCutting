// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.6
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.QueryEvaluator.Abstractions
{
    public partial interface ICondition
    {
        System.Nullable<CrossCutting.Utilities.QueryEvaluator.Domains.Combination> Combination
        {
            get;
        }

        bool StartGroup
        {
            get;
        }

        bool EndGroup
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.IConditionBuilder ToBuilder();
    }
    public partial interface IExpression
    {
        CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.IExpressionBuilder ToBuilder();
    }
    public partial interface IOperator
    {
        CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.IOperatorBuilder ToBuilder();
    }
    public partial interface IParameterizedQuery : CrossCutting.Utilities.QueryEvaluator.Abstractions.IQuery
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.IReadOnlyCollection<CrossCutting.Utilities.QueryEvaluator.Abstractions.IQueryParameter> Parameters
        {
            get;
        }

        new CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.IParameterizedQueryBuilder ToBuilder();
    }
    public partial interface IQuery
    {
        System.Nullable<int> Limit
        {
            get;
        }

        System.Nullable<int> Offset
        {
            get;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        [CrossCutting.Utilities.QueryEvaluator.Validation.ValidGroupsAttribute]
        System.Collections.Generic.IReadOnlyCollection<CrossCutting.Utilities.QueryEvaluator.Abstractions.ICondition> Filter
        {
            get;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.IReadOnlyCollection<CrossCutting.Utilities.QueryEvaluator.Abstractions.IQuerySortOrder> OrderByFields
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.IQueryBuilder ToBuilder();
    }
    public partial interface IQueryParameter
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        string Name
        {
            get;
        }

        object? Value
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.IQueryParameterBuilder ToBuilder();
    }
    public partial interface IQueryParameterValue
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        string Name
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.IQueryParameterValueBuilder ToBuilder();
    }
    public partial interface IQuerySortOrder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        CrossCutting.Utilities.ExpressionEvaluator.IExpression<string> FieldNameExpression
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Domains.QuerySortOrderDirection Order
        {
            get;
        }

        CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.IQuerySortOrderBuilder ToBuilder();
    }
    public partial interface ISingleEntityQuery : CrossCutting.Utilities.QueryEvaluator.Abstractions.IQuery
    {
        new CrossCutting.Utilities.QueryEvaluator.Builders.Abstractions.ISingleEntityQueryBuilder ToBuilder();
    }
}
#nullable disable
