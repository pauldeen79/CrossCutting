// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.6
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.QueryEvaluator.Builders
{
    public abstract partial class ConditionBuilder<TBuilder, TEntity> : ConditionBuilder
        where TEntity : CrossCutting.Utilities.QueryEvaluator.Condition
        where TBuilder : ConditionBuilder<TBuilder, TEntity>
    {
        protected ConditionBuilder(CrossCutting.Utilities.QueryEvaluator.Condition source) : base(source)
        {
        }

        protected ConditionBuilder() : base()
        {
        }

        public override CrossCutting.Utilities.QueryEvaluator.Condition Build()
        {
            return BuildTyped();
        }

        public abstract TEntity BuildTyped();

        public static implicit operator CrossCutting.Utilities.QueryEvaluator.Condition(ConditionBuilder<TBuilder, TEntity> entity)
        {
            return entity.BuildTyped();
        }
    }
    public abstract partial class ExpressionBuilder<TBuilder, TEntity> : ExpressionBuilder
        where TEntity : CrossCutting.Utilities.QueryEvaluator.Expression
        where TBuilder : ExpressionBuilder<TBuilder, TEntity>
    {
        protected ExpressionBuilder(CrossCutting.Utilities.QueryEvaluator.Expression source) : base(source)
        {
        }

        protected ExpressionBuilder() : base()
        {
        }

        public override CrossCutting.Utilities.QueryEvaluator.Expression Build()
        {
            return BuildTyped();
        }

        public abstract TEntity BuildTyped();

        public static implicit operator CrossCutting.Utilities.QueryEvaluator.Expression(ExpressionBuilder<TBuilder, TEntity> entity)
        {
            return entity.BuildTyped();
        }
    }
    public abstract partial class OperatorBuilder<TBuilder, TEntity> : OperatorBuilder
        where TEntity : CrossCutting.Utilities.QueryEvaluator.Operator
        where TBuilder : OperatorBuilder<TBuilder, TEntity>
    {
        protected OperatorBuilder(CrossCutting.Utilities.QueryEvaluator.Operator source) : base(source)
        {
        }

        protected OperatorBuilder() : base()
        {
        }

        public override CrossCutting.Utilities.QueryEvaluator.Operator Build()
        {
            return BuildTyped();
        }

        public abstract TEntity BuildTyped();

        public static implicit operator CrossCutting.Utilities.QueryEvaluator.Operator(OperatorBuilder<TBuilder, TEntity> entity)
        {
            return entity.BuildTyped();
        }
    }
    public abstract partial class QueryBuilder<TBuilder, TEntity> : QueryBuilder
        where TEntity : CrossCutting.Utilities.QueryEvaluator.Query
        where TBuilder : QueryBuilder<TBuilder, TEntity>
    {
        protected QueryBuilder(CrossCutting.Utilities.QueryEvaluator.Query source) : base(source)
        {
        }

        protected QueryBuilder() : base()
        {
        }

        public override CrossCutting.Utilities.QueryEvaluator.Query Build()
        {
            return BuildTyped();
        }

        public abstract TEntity BuildTyped();

        public static implicit operator CrossCutting.Utilities.QueryEvaluator.Query(QueryBuilder<TBuilder, TEntity> entity)
        {
            return entity.BuildTyped();
        }
    }
}
#nullable disable
