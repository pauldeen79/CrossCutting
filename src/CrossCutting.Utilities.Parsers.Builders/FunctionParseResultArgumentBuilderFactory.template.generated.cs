// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 7.0.5
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace CrossCutting.Utilities.Parsers.Builders
{
#nullable enable
    public static partial class FunctionParseResultArgumentBuilderFactory
    {
        public static CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArgumentBuilder Create(CrossCutting.Utilities.Parsers.FunctionParseResultArgument instance)
        {
            return registeredTypes.ContainsKey(instance.GetType()) ? registeredTypes[instance.GetType()].Invoke(instance) : throw new ArgumentOutOfRangeException("Unknown instance type: " + instance.GetType().FullName);
        }

        public static void Register(System.Type type, Func<CrossCutting.Utilities.Parsers.FunctionParseResultArgument,FunctionParseResultArgumentBuilder> createDelegate)
        {
            registeredTypes.Add(type, createDelegate);
        }

        private static Dictionary<Type,Func<CrossCutting.Utilities.Parsers.FunctionParseResultArgument,FunctionParseResultArgumentBuilder>> registeredTypes = new Dictionary<Type, Func<CrossCutting.Utilities.Parsers.FunctionParseResultArgument, FunctionParseResultArgumentBuilder>>
        {
            { typeof(CrossCutting.Utilities.Parsers.FunctionParseResultArguments.FunctionArgument),x => new CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArguments.FunctionArgumentBuilder((CrossCutting.Utilities.Parsers.FunctionParseResultArguments.FunctionArgument)x) },
            { typeof(CrossCutting.Utilities.Parsers.FunctionParseResultArguments.LiteralArgument),x => new CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArguments.LiteralArgumentBuilder((CrossCutting.Utilities.Parsers.FunctionParseResultArguments.LiteralArgument)x) },
        };
    }
#nullable restore
}

