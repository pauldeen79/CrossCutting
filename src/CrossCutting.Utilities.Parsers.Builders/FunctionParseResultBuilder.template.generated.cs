// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 7.0.5
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace CrossCutting.Utilities.Parsers.Builders
{
#nullable enable
    public partial class FunctionParseResultBuilder
    {
        public System.Text.StringBuilder FunctionName
        {
            get
            {
                return _functionNameDelegate.Value;
            }
            set
            {
                _functionNameDelegate = new (() => value);
            }
        }

        public System.Collections.Generic.IEnumerable<CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArgumentBuilder> Arguments
        {
            get;
            set;
        }

        public System.IFormatProvider FormatProvider
        {
            get
            {
                return _formatProviderDelegate.Value;
            }
            set
            {
                _formatProviderDelegate = new (() => value);
            }
        }

        public object? Context
        {
            get
            {
                return _contextDelegate.Value;
            }
            set
            {
                _contextDelegate = new (() => value);
            }
        }

        public CrossCutting.Utilities.Parsers.FunctionParseResult Build()
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            #pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
            return new CrossCutting.Utilities.Parsers.FunctionParseResult(FunctionName?.ToString(), Arguments.Select(x => x.Build()), FormatProvider, Context);
            #pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
            #pragma warning restore CS8604 // Possible null reference argument.
        }

        public System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(System.ComponentModel.DataAnnotations.ValidationContext validationContext)
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            #pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
            var instance = new CrossCutting.Utilities.Parsers.FunctionParseResultBase(FunctionName?.ToString(), Arguments.Select(x => x.Build()), FormatProvider, Context);
            #pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
            #pragma warning restore CS8604 // Possible null reference argument.
            var results = new System.Collections.Generic.List<System.ComponentModel.DataAnnotations.ValidationResult>();
            System.ComponentModel.DataAnnotations.Validator.TryValidateObject(instance, new System.ComponentModel.DataAnnotations.ValidationContext(instance, null, null), results, true);
            return results;
        }

        public FunctionParseResultBuilder WithFunctionName(System.Text.StringBuilder functionName)
        {
            FunctionName = functionName;
            return this;
        }

        public FunctionParseResultBuilder WithFunctionName(System.Func<System.Text.StringBuilder> functionNameDelegate)
        {
            _functionNameDelegate = new (functionNameDelegate);
            return this;
        }

        public FunctionParseResultBuilder WithFunctionName(string value)
        {
            if (FunctionName == null)
                FunctionName = new System.Text.StringBuilder();
            FunctionName.Clear().Append(value);
            return this;
        }

        public FunctionParseResultBuilder AppendToFunctionName(string value)
        {
            if (FunctionName == null)
                FunctionName = new System.Text.StringBuilder();
            FunctionName.Append(value);
            return this;
        }

        public FunctionParseResultBuilder AppendLineToFunctionName(string value)
        {
            if (FunctionName == null)
                FunctionName = new System.Text.StringBuilder();
            FunctionName.AppendLine(value);
            return this;
        }

        public FunctionParseResultBuilder AddArguments(System.Collections.Generic.IEnumerable<CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArgumentBuilder> arguments)
        {
            return AddArguments(arguments.ToArray());
        }

        public FunctionParseResultBuilder AddArguments(params CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArgumentBuilder[] arguments)
        {
            Arguments = Arguments.Concat(arguments);
            return this;
        }

        public FunctionParseResultBuilder WithFormatProvider(System.IFormatProvider formatProvider)
        {
            FormatProvider = formatProvider;
            return this;
        }

        public FunctionParseResultBuilder WithFormatProvider(System.Func<System.IFormatProvider> formatProviderDelegate)
        {
            _formatProviderDelegate = new (formatProviderDelegate);
            return this;
        }

        public FunctionParseResultBuilder WithContext(object? context)
        {
            Context = context;
            return this;
        }

        public FunctionParseResultBuilder WithContext(System.Func<object?> contextDelegate)
        {
            _contextDelegate = new (contextDelegate);
            return this;
        }

        public FunctionParseResultBuilder()
        {
            Arguments = Enumerable.Empty<CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArgumentBuilder>();
            #pragma warning disable CS8603 // Possible null reference return.
            _functionNameDelegate = new (() => new System.Text.StringBuilder());
            _formatProviderDelegate = new (() => System.Globalization.CultureInfo.InvariantCulture);
            _contextDelegate = new (() => default(object?));
            #pragma warning restore CS8603 // Possible null reference return.
        }

        public FunctionParseResultBuilder(CrossCutting.Utilities.Parsers.FunctionParseResult source)
        {
            Arguments = Enumerable.Empty<CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArgumentBuilder>();
            _functionNameDelegate = new (() => new System.Text.StringBuilder(source.FunctionName));
            Arguments = source.Arguments.Select(x => CrossCutting.Utilities.Parsers.Builders.FunctionParseResultArgumentBuilderFactory.Create(x)).ToList();
            _formatProviderDelegate = new (() => source.FormatProvider);
            _contextDelegate = new (() => source.Context);
        }

        protected System.Lazy<System.Text.StringBuilder> _functionNameDelegate;

        protected System.Lazy<System.IFormatProvider> _formatProviderDelegate;

        protected System.Lazy<object?> _contextDelegate;
    }
#nullable restore
}

