// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.3
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArguments
{
    public partial record ConstantArgument : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument
    {
        public object? Value
        {
            get;
        }

        public ConstantArgument(object? value) : base()
        {
            this.Value = value;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ConstantArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ConstantArgumentBuilder(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record ConstantArgument<T> : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>
    {
        public T Value
        {
            get;
        }

        public ConstantArgument(T value) : base()
        {
            this.Value = value;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ConstantArgumentBuilder<T> ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ConstantArgumentBuilder<T>(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder<T> CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record ConstantResultArgument : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public CrossCutting.Common.Results.Result<object?> Result
        {
            get;
        }

        public ConstantResultArgument(CrossCutting.Common.Results.Result<object?> result) : base()
        {
            this.Result = result;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ConstantResultArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ConstantResultArgumentBuilder(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record ConstantResultArgument<T> : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>
    {
        public CrossCutting.Common.Results.Result<T> Result
        {
            get;
        }

        public ConstantResultArgument(CrossCutting.Common.Results.Result<T> result) : base()
        {
            this.Result = result;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ConstantResultArgumentBuilder<T> ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ConstantResultArgumentBuilder<T>(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder<T> CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record DelegateArgument : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Func<object?> Delegate
        {
            get;
        }

        public System.Func<System.Type>? ValidationDelegate
        {
            get;
        }

        public DelegateArgument(System.Func<object?> @delegate, System.Func<System.Type>? validationDelegate) : base()
        {
            this.Delegate = @delegate;
            this.ValidationDelegate = validationDelegate;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.DelegateArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.DelegateArgumentBuilder(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record DelegateArgument<T> : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Func<T> Delegate
        {
            get;
        }

        public System.Func<System.Type>? ValidationDelegate
        {
            get;
        }

        public DelegateArgument(System.Func<T> @delegate, System.Func<System.Type>? validationDelegate) : base()
        {
            this.Delegate = @delegate;
            this.ValidationDelegate = validationDelegate;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.DelegateArgumentBuilder<T> ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.DelegateArgumentBuilder<T>(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder<T> CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record DelegateResultArgument : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Func<CrossCutting.Common.Results.Result<object?>> Delegate
        {
            get;
        }

        public System.Func<CrossCutting.Common.Results.Result<System.Type>>? ValidationDelegate
        {
            get;
        }

        public DelegateResultArgument(System.Func<CrossCutting.Common.Results.Result<object?>> @delegate, System.Func<CrossCutting.Common.Results.Result<System.Type>>? validationDelegate) : base()
        {
            this.Delegate = @delegate;
            this.ValidationDelegate = validationDelegate;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.DelegateResultArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.DelegateResultArgumentBuilder(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record DelegateResultArgument<T> : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public System.Func<CrossCutting.Common.Results.Result<T>> Delegate
        {
            get;
        }

        public System.Func<CrossCutting.Common.Results.Result<System.Type>>? ValidationDelegate
        {
            get;
        }

        public DelegateResultArgument(System.Func<CrossCutting.Common.Results.Result<T>> @delegate, System.Func<CrossCutting.Common.Results.Result<System.Type>>? validationDelegate) : base()
        {
            this.Delegate = @delegate;
            this.ValidationDelegate = validationDelegate;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.DelegateResultArgumentBuilder<T> ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.DelegateResultArgumentBuilder<T>(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder<T> CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record EmptyArgument : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument
    {
        public EmptyArgument() : base()
        {
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.EmptyArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.EmptyArgumentBuilder(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record EmptyArgument<T> : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>
    {
        public EmptyArgument() : base()
        {
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.EmptyArgumentBuilder<T> ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.EmptyArgumentBuilder<T>(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder<T> CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument<T>.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record ExpressionArgument : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        public string Expression
        {
            get;
        }

        public ExpressionArgument(string expression) : base()
        {
            this.Expression = expression;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ExpressionArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.ExpressionArgumentBuilder(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
    public partial record FunctionArgument : CrossCutting.Utilities.ExpressionEvaluator.FunctionCallArgumentBase, CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        public CrossCutting.Utilities.ExpressionEvaluator.FunctionCall Function
        {
            get;
        }

        public FunctionArgument(CrossCutting.Utilities.ExpressionEvaluator.FunctionCall function) : base()
        {
            this.Function = function;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }

        public override CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArgumentBaseBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.FunctionArgumentBuilder ToTypedBuilder()
        {
            return new CrossCutting.Utilities.ExpressionEvaluator.Builders.FunctionCallArguments.FunctionArgumentBuilder(this);
        }

        CrossCutting.Utilities.ExpressionEvaluator.Builders.Abstractions.IFunctionCallArgumentBuilder CrossCutting.Utilities.ExpressionEvaluator.Abstractions.IFunctionCallArgument.ToBuilder()
        {
            return ToTypedBuilder();
        }
    }
}
#nullable disable
